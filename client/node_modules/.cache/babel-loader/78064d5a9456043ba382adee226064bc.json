{"ast":null,"code":"import _regeneratorRuntime from\"/Users/abhishek/Desktop/NASA_PROJECT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/abhishek/Desktop/NASA_PROJECT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{response}from\"../../../server/src/app\";function httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}function _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://localhost:8000/planets\");case 2:response=_context.sent;_context.next=5;return response.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"http://localhost:8000/launches\");case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"http://localhost:8000/launches\",{body:JSON.stringify(launch),headers:{\"Content-Type\":\"application/json\"},method:\"post\"});case 2:response=_context3.sent;_context3.next=5;return response.json();case 5:return _context3.abrupt(\"return\",_context3.sent);case 6:case\"end\":return _context3.stop();}}},_callee3);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:case\"end\":return _context4.stop();}}},_callee4);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/Users/abhishek/Desktop/NASA_PROJECT/client/src/hooks/requests.js"],"names":["response","httpGetPlanets","fetch","json","httpGetLaunches","httpSubmitLaunch","launch","body","JSON","stringify","headers","method","httpAbortLaunch","id"],"mappings":"iUAAA,OAASA,QAAT,KAAyB,yBAAzB,C,QAEeC,CAAAA,c,oJAAf,sKACyBC,CAAAA,KAAK,CAAC,+BAAD,CAD9B,QACQF,QADR,qCAEeA,CAAAA,QAAQ,CAACG,IAAT,EAFf,6G,yDAKeC,CAAAA,e,uJAAf,4KACyBF,CAAAA,KAAK,CAAC,gCAAD,CAD9B,QACQF,QADR,uCAEeA,CAAAA,QAAQ,CAACG,IAAT,EAFf,iH,0DAKeE,CAAAA,gB,4JAAf,kBAAgCC,MAAhC,0JACyBJ,CAAAA,KAAK,CAAC,gCAAD,CAAmC,CAC7DK,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeH,MAAf,CADuD,CAE7DI,OAAO,CAAE,CACP,eAAgB,kBADT,CAFoD,CAK7DC,MAAM,CAAE,MALqD,CAAnC,CAD9B,QACQX,QADR,uCAQeA,CAAAA,QAAQ,CAACG,IAAT,EARf,iH,2DAWeS,CAAAA,e,0JAAf,kBAA+BC,EAA/B,uK,kDAKA,OAASZ,cAAT,CAAyBG,eAAzB,CAA0CC,gBAA1C,CAA4DO,eAA5D","sourcesContent":["import { response } from \"../../../server/src/app\";\n\nasync function httpGetPlanets() {\n  const response = await fetch(\"http://localhost:8000/planets\");\n  return await response.json();\n}\n\nasync function httpGetLaunches() {\n  const response = await fetch(\"http://localhost:8000/launches\");\n  return await response.json();\n}\n\nasync function httpSubmitLaunch(launch) {\n  const response = await fetch(\"http://localhost:8000/launches\", {\n    body: JSON.stringify(launch),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"post\",\n  });\n  return await response.json();\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"]},"metadata":{},"sourceType":"module"}